name: pipeline-cicd-web-application
on:
  push:
    branches:
      - main

permissions:
  contents: write
  actions: read 

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run unit tests
        run: CI=true npm test

      - name: Build application
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: build

  release:
    name: Release
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: Set up Node.js
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: build
      
      - name: Determine version bump type
        id: check_commit
        run: |
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Last commit message: $LAST_COMMIT_MSG"

          if echo "$LAST_COMMIT_MSG" | grep -iqE "BREAKING CHANGE"; then
            echo "VERSION_BUMP=major" >> $GITHUB_ENV
          elif [[ "$LAST_COMMIT_MSG" == "feat:"* ]]; then
            echo "VERSION_BUMP=minor" >> $GITHUB_ENV
          elif [[ "$LAST_COMMIT_MSG" == "fix:"* ]]; then
            echo "VERSION_BUMP=patch" >> $GITHUB_ENV
          else
            echo "VERSION_BUMP=none" >> $GITHUB_ENV
          fi

      - name: Increment npm version (if applicable)
        if: env.VERSION_BUMP != 'none'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          npm version $VERSION_BUMP -m "chore(release): bump version to %s"
          git push --follow-tags

      - name: Get package.json version
        id: package_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Zip build folder
        run: zip -r build-v${{ env.VERSION }}.zip build
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: build-v${{ env.VERSION }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: |
            Automatic release from CI pipeline.
            - Commit: ${{ github.sha }}
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}